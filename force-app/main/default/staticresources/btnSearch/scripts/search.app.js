!function(e){"use strict";e.module("btn.search",["ui.bootstrap","ngSanitize","ngProgress","ngAnimate","ngRoute","ngTagsInput"])}(angular),function(){"use strict";function e(){var e=this;e.message="sdasdsada s sas sdafas a sddasdss ss  adasdass as s s s s sss ss ss sss dasdsad sasd sdasdasd"}angular.module("btn.search").controller("MainMenuController",e)}(),angular.module("btn.search").service("btnSurveyProgressBar",[function(){this.start=function(e){e.start()},this.stop=function(e){e.set(100),e.hide()}}]),angular.module("btn.search").factory("btnSearchDialog",["$uibModal","btnSearchLabel",function(e,t){const a="btn-primary",n="btn-default";return{alert:function(e){var n=angular.isObject(e)?angular.extend({},e):{title:e};return this.custom({title:n.title,titleIcon:n.titleIcon,message:n.message,answer:n.answer,buttons:[{label:t.OK,style:a,action:function(e){e.close(!0)}}]})},confirm:function(e){var s=angular.isObject(e)?angular.extend({},e):{title:e};return this.custom({title:s.title,titleIcon:s.titleIcon,message:s.message,answer:s.answer,buttons:[{label:t.yes,style:a,action:function(e){e.close(!0)}},{label:t.no,style:n,action:function(e){e.close(!1)}}]})},custom:function(t){var a=angular.extend({showMessage:angular.isDefined(t.message),showTitle:angular.isDefined(t.title),controller:"BtnSearchDialogController",templateUrl:"app/templates/btn.search.dialog.html",controllerAs:"modalDialogCtrl"},t);return(t._modalInstance=e.open({"class":"bootstrap",controllerAs:a.controllerAs,templateUrl:a.templateUrl,windowClass:a.windowClass,controller:a.controller,size:a.dialogSize,resolve:{dialogModel:function(){return a}}})).result}}}]),angular.module("btn.search").service("btnSearchConnection",["$http","$q","$window","btnSearchConf","btnSearchSfdcConf","btnSearchLabel","btnSearchAlert",function(e,t,a,n,s,r,c){const i="error",l="exception";var o=function(e,n){var s=t.defer(),o=function(e,t){return t.type==l&&t.message&&-1!=t.message.indexOf("Logged in?")&&a.location.reload(),t.status?void s.resolve(e):(c.addAlert(t.message+"<br>"+r.salesforceMessage,i,!0),void s.resolve(null))};return n.unshift(e),n.push(o),n.push({escape:!1}),Visualforce.remoting.Manager.invokeAction.apply(Visualforce.remoting.Manager,n),s.promise};this.getOptions=function(t){return s?o(s.url.search.options,[]):e.get(n.url.search.options).error(function(){btnSurveyAlert.addAlert(r.getTemplateMessage,i,!0)}).success(function(){console.log("#Successfully getOption.")}).then(function(e){return angular.fromJson(e)})},this.search=function(e){return s?o(s.url.search.search,[e]):null}}]),angular.module("btn.search").service("btnSearchConnectionBs",["$http","$q","$window","btnSearchConf","btnSearchLabel","btnSearchAlert",function(e,t,a,n,s,r){const c="error";this.getOptions=function(t){return e.get(n.url.search.options).error(function(){r.addAlert(s.getTemplateMessage,c,!0)}).success(function(){console.log("#Successfully getOption.")}).then(function(e){return angular.fromJson(e.data)})},this.search=function(t){angular.toJson(t);return e.post(n.url.search.search,t).error(function(){r.addAlert(s.getTemplateMessage,c,!0)}).success(function(){console.log("#Successfully send criteria.")}).then(function(e){var t=angular.fromJson(e.data);if(angular.isDefined(t[0])&&t[0].errorCode)r.addAlert(angular.fromJson(getErrorMessage(t[0].message)).message,c,!0);else{if(!t.errorCode)return t;r.addAlert(angular.fromJson(getErrorMessage(t.message)).message,c,!0)}})}}]),angular.module("btn.search").service("btnSearchAlert",["$window",function(e){this.alert={},this.addAlert=function(t,a,n,s){e.scrollTo(0,0),this.alert={message:t,type:a,closable:void 0!==s?s:!0}},this.removeAlert=function(){this.alert=null}}]),angular.module("btn.search").directive("btnSearchCriteria",[function(){var e=function(e){var t=[];angular.forEach(e.searchData.achievementsSetsNames,function(e){t.push({name:e.text})}),angular.forEach(e.searchData.achievementsSearchCriterias,function(a){var n=null;if("Skill"===a.recordType||"Group"===a.recordType){for(var s=0;s<e.contact.Achievements__r.length;s++)if(e.contact.Achievements__r[s].Achievement__c===a.id){n=e.contact.Achievements__r[s].Level__c;break}t.push({name:a.name,value:n})}else if("Attribute"===a.recordType){for(var s=0;s<e.contact.Achievements__r.length;s++)if(e.contact.Achievements__r[s].Achievement__c===a.id){n=e.contact.Achievements__r[s].LevelValue__c;break}t.push({name:a.name,value:n})}else if("Badge"===a.recordType||"Specialization"===a.recordType){for(s=0;s<e.contact.Achievements__r.length;s++)if(e.contact.Achievements__r[s].Achievement__c===a.id){n=e.contact.Achievements__r[s].Amount__c;break}t.push({name:a.name,value:n})}else if("Certificate"===a.recordType&&a.selected)t.push({name:a.name});else if("ACHIEVEMENT_MONTHSFROMDATE_RECORD_TYPE"===a.recordType){for(var s=0;s<e.contact.Achievements__r.length;s++)if(e.contact.Achievements__r[s].Achievement__c===a.id){n=e.contact.Achievements__r[s].NumberOfMonths__c;break}t.push({name:a.name,value:n})}else angular.isUndefined(a.minAmount)&&angular.isUndefined(a.selected)&&angular.isUndefined(a.level)&&t.push({name:a.name})}),e.searchedAchievements=t};return{restrict:"E",scope:{contact:"=",searchData:"="},templateUrl:"app/templates/btn.search.criteria.html",link:function(t){t.searchedAchievements=[],e(t)}}}]),angular.module("btn.search").directive("btnSearchContacts",["btnSearchDialog","btnSearchLabel",function(e,t){return{restrict:"E",scope:{contacts:"=",searchData:"="},templateUrl:"app/templates/btn.search.contacts.html",link:function(a){a.btnSearchLabel=t,a.details=function(t){var a={title:t.Contact__r.FirstName+" "+t.Contact__r.LastName,contact:t,templateUrl:"app/templates/btn.search.dialog.html",buttons:[{label:"OK",style:"btn-primary",action:function(e){e.close(!0)}}]};e.custom(a)}}}}]),angular.module("btn.search").directive("btnSearchBase",["btnSearchLabel","btnSearchConnectionBs",function(e,t){var a=function(t){var a={};a.achievementsSetsNames=t.achievementSetsName,a.achievementsSearchCriterias=[],angular.forEach(t.achievementsName,function(e){a.achievementsSearchCriterias.push({id:e.id,name:e.text,level:null,minAmount:0,selected:!0})}),t.searchData=a,t.showSearch?(t.showSearch=!1,t.searchLabel=e.advencedSearch):(t.showSearch=!0,t.searchLabel=e.baseSearch)},n=function(e){var a={};e.loader=!0,e.notFillCriteria=!1,a.achievementsSetsIds=[],angular.forEach(e.achievementSetsName,function(e){a.achievementsSetsIds.push(e.id)}),a.achievementsSearchCriterias=[],angular.forEach(e.achievementsName,function(e){a.achievementsSearchCriterias.push({id:e.id,name:e.text,level:e.level,minAmount:e.minAmount,selected:e.selected,recordType:e.recordType})}),e.searchData=a,e.achievementSetsName.length>0||e.achievementsName.length>0?t.search(a).then(function(t){e.loader=!1,e.contacts=t,e.showContacts=!0}):(e.loader=!1,e.notFillCriteria=!0,e.showContacts=!1)};return{restrict:"E",templateUrl:"app/templates/btn.search.base.html",link:function(t){t.contacts=[],t.loader=!1,t.showContacts=!1,t.achievementsName=[],t.achievementSetsName=[],t.showSearch=!1,t.btnSearchLabel=e,t.showAdvancedSerach=function(){a(t)},t.search=function(){n(t)}}}}]),angular.module("btn.search").directive("btnSearchAlert",["btnSearchAlert","$timeout",function(e,t){return{restrict:"E",templateUrl:"app/templates/btn.search.alert.html",link:function(a){a.$watch(function(){return e.alert},function(e){e&&(a.alert=e,t(function(){a.alert=null},5e3))}),a.closeAlert=function(){a.alert=null}}}}]),angular.module("btn.search").directive("btnSearchAdvenced",["btnSearchLabel",function(e){var t=function(e,t){t.achievementsName.splice(e,1)};return{restrict:"E",required:"^btnSearchBase",templateUrl:"app/templates/btn.search.advenced.html",link:function(a){a.btnSearchLabel=e,a.removeAchievement=function(e){t(e,a)}}}}]),angular.module("btn.search").controller("MainController",["$scope","$filter","btnSearchConnection",function(e,t,a){e.result=null,null===e.result&&a.getOptions().then(function(a){e.result=a,e.loadAchievmentsSets=function(a){return t("filter")(e.result.achievmentsSets,{text:a})},e.loadAchievments=function(a){return t("filter")(e.result.achievments,{text:a})}})}]),angular.module("btn.search").controller("BtnSearchDialogController",["$scope","$uibModalInstance","dialogModel",function(e,t,a){this.value=null,this.dialogModel=a,this.modalInstance=t,this.close=function(){t.dismiss(!1)},this.selectValue=function(e){t.close(e)},angular.isFunction(this.dialogModel.init)&&this.dialogModel.init(),e.getFieldValue=function(e,t){return e.indexOf(".")>0?(angular.forEach(e.split("."),function(e){angular.isDefined(t)&&(t=t[e])}),t):t[e]}}]),function(){"use strict";function e(e){e.debug("runBlock start"),e.debug("runBlock end")}e.$inject=["$log"],angular.module("btn.search").run(e)}(),function(){"use strict";function e(e,t,a,n){}e.$inject=["$routeProvider","$locationProvider","$provide","$injector"],angular.module("btn.search").config(e)}(),function(){"use strict";angular.module("btn.search")}(),function(){"use strict";function e(e){e.debugEnabled(!0)}e.$inject=["$logProvider"],angular.module("btn.search").config(e)}(),angular.module("btn.search").constant("btnSearchLabel",{OK:"OK",yes:"Yes",no:"nie",comment:"Comment",commentMessage:"Type your attention to the question.",question:"Question",list:"List",grid:"Grid",graph:"Graph",smallGrid:"Small grid with modal answers",achievementGrid:"Achievement Grid",validateMessage:"You did not answer all the required questions!",saveOkMessage:"Save OK!",getTemplateMessage:"We have problem with getting selected template. Please contact with your administrator!",getAllTemplatesMessage:"We have problem with getting set of your templates. Please contact with your administrator!",saveSurveyMessage:"We have problem with saving survey. Please contact with your administrator!",getSurveyMessage:"We have problem with getting survey. Please contact with your administrator!",salesforceMessage:"Please contact with your administrator!",surveyServiceAlert:"Template or Survey cannot be null!!!",advencedSearch:"Wyszukiwanie zaawansowane",baseSearch:"Wyszukiwanie podstawowe",search:"Szukaj",searchAchievementSet:"Wyszukaj stanowisko",searchAchievement:"Wyszukaj umiejętność",searchCriteria:"Kryteria wyszukiwania",name:"Nazwa",value:"Wartość",action:"Akcja",firstName:"Imię",lastName:"Nazwisko",assignedPosition:"Przypisane stanowisko",position:"Stanowisko",positions:"Stanowiska",details:"Szczegóły",notFound:"Nie znaleziono żadnych pracowników.",notFillCriteria:"Proszę uzupełnić przynajmniej jedno z kryteriów wyszukiwania",email:"Email",achievements:"Umiejętności",achievement:"Umiejętność",searchEmployees:"Brite skills - Wyszukiwarka pracowników",userData:"Dane użytkownika",achievementSearch:"filtruj w wynikach wyszukiwania",matchLevel:"Poziom dopasowania",write:"Podaj liczbę",selectOption:" -- wybierz --",numberOfMonths:"Liczba miesięcy"}),angular.module("btn.search").constant("btnSearchConf",{url:{surveyTemplate:{getTemplatesInfo:"app/mocks/questionsMap.json",getTemplate:"app/mocks/extendentQuestion.json",getSurvey:"",saveSurvey:"",getUsers:"app/mocks/contacts.json"},search:{options:"app/mocks/autocomplete.json"}}}),angular.module("btn.search").run(["$templateCache",function(e){e.put("app/templates/btn.search.advenced.html",'<div ng-if="achievementsName.length > 0"><table class="table table-striped"><thead><tr><th>{{btnSearchLabel.name}}</th><th>{{btnSearchLabel.value}}</th><th>{{btnSearchLabel.action}}</th></tr></thead><tbody><tr ng-repeat="(key, achievement) in achievementsName"><td class="vertical-align-middle">{{ achievement.text }}</td><td class="vertical-align-middle"><div ng-if="achievement.recordType == \'Badge\' || achievement.recordType == \'MonthsFromDate\'"><input type="number" class="form-control" placeholder="{{btn.btnSearchLabel.Wtite}}" ng-model="achievement.minAmount" min="0"></div><div ng-if="achievement.recordType == \'Skill\' || achievement.recordType == \'Group\' || achievement.recordType == \'Attribute\'"><select class="form-control" ng-options="key as value for (key , value) in achievement.options" ng-model="achievement.level"><option value="">{{btnSearchLabel.selectOption}}</option></select></div><div ng-if="achievement.recordType == \'Certificate\'"><span class="glyphicon glyphicon-ok"></span><input type="checkbox" checked="checked" disabled="true" ng-init="achievement.selected = achievement.selected || true" placeholder="Write..." ng-model="achievement.selected" style="visibility: hidden;"></div><div ng-if="achievement.recordType == \'Specialization\'"><label class="label-range" for="percent_range">{{achievement.minAmount}}%</label> <input class="input-range" type="range" id="percent_range" ng-init="achievement.minAmount = \'0\'" ng-model="achievement.minAmount" min="0" max="100" step="1"></div></td><td class="vertical-align-middle"><button class="btn btn-danger" ng-click="removeAchievement(key)"><span class="glyphicon glyphicon-remove"></span></button></td></tr></tbody></table></div>'),e.put("app/templates/btn.search.base.html",'<div class="panel panel-default"><div class="panel-heading">{{btnSearchLabel.searchEmployees}}</div><div ng-controller="MainController" class="panel-body"><tags-input ng-model="achievementSetsName" replace-spaces-with-dashes="false" add-from-autocomplete-only="true" placeholder="{{btnSearchLabel.searchAchievementSet}}"><auto-complete source="loadAchievmentsSets($query)" min-length="1"></auto-complete></tags-input><tags-input ng-model="achievementsName" add-on-paste="true" replace-spaces-with-dashes="false" add-from-autocomplete-only="true" placeholder="{{btnSearchLabel.searchAchievement}}"><auto-complete source="loadAchievments($query)" min-length="1"></auto-complete></tags-input><a href="#" ng-if="achievementsName.length > 0" ng-click="showAdvancedSerach()" class="btn btn-primary"><span class="glyphicon glyphicon-tasks"></span> {{btnSearchLabel.advencedSearch}}</a><br><btn-search-advenced ng-if="showSearch"></btn-search-advenced><br><button class="btn btn-primary btn btn-secondary pull-left" ng-click="search()"><span class="glyphicon glyphicon-search"></span> {{btnSearchLabel.search}}</button> <span class="loader" ng-if="loader"></span><div class="clearfix"></div><span class="no-contacts-info" ng-if="notFillCriteria">{{btnSearchLabel.notFillCriteria}}</span><btn-search-contacts ng-if="showContacts" contacts="contacts" search-data="searchData"></btn-search-contacts></div></div>'),e.put("app/templates/btn.search.contacts.html",'<div><span class="no-contacts-info" ng-if="contacts == null || contacts.length == 0">{{btnSearchLabel.notFound}}</span><table ng-if="contacts != null && contacts.length > 0" class="table table-striped"><thead><tr><th>{{btnSearchLabel.firstName}}</th><th>{{btnSearchLabel.lastName}}</th><th>{{btnSearchLabel.assignedPosition}}</th><th>{{btnSearchLabel.searchCriteria}}</th><th>{{btnSearchLabel.Details}}</th></tr></thead><tbody><tr ng-repeat="(key, contact) in contacts"><td>{{ contact.Contact__r.FirstName }}</td><td>{{ contact.Contact__r.LastName }}</td><td>{{ contact.Contact__r.Current_Position__r.Name }}</td><td><btn-search-criteria contact="contact" search-data="searchData"></btn-search-criteria></td><td><button class="btn btn-primary btn btn-secondary" ng-click="details(contact)"><span class="glyphicon glyphicon-th-list"></span></button></td></tr></tbody></table></div>'),e.put("app/templates/btn.search.criteria.html",'<div><ul><li ng-repeat="achievement in searchedAchievements">{{achievement.name}} <span ng-if="achievement.value">- {{achievement.value}}</span></li></ul></div>'),e.put("app/templates/btn.search.dialog.html",'<div class="bootstrap"><div class="modal-header" show="modalDialogCtrl.dialogModel.showTitle"><button type="button" class="close" ng-click="modalDialogCtrl.close()" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" ng-bind-html="modalDialogCtrl.dialogModel.title"></h4></div><div class="modal-body"><p></p><h5><strong>{{btnSearchLabel.userData}}</strong></h5><p></p><table class="user-data-table"><tr><td class="user-data-table-desc"><strong>{{btnSearchLabel.firstName}}:</strong></td><td class="user-data-table-value">{{ modalDialogCtrl.dialogModel.contact.Contact__r.FirstName }}</td><td class="user-data-table-desc"><strong>{{btnSearchLabel.email}}:</strong></td><td class="user-data-table-value">{{ modalDialogCtrl.dialogModel.contact.Contact__r.Email }}</td></tr><tr><td class="user-data-table-desc"><strong>{{btnSearchLabel.lastName}}:</strong></td><td class="user-data-table-value">{{ modalDialogCtrl.dialogModel.contact.Contact__r.LastName }}</td><td class="user-data-table-desc"><strong>{{btnSearchLabel.position}}:</strong></td><td class="user-data-table-value">{{ modalDialogCtrl.dialogModel.contact.Contact__r.Current_Position__r.Name}}</td></tr></table><br><br><uib-tabset active="active" class="tabs"><uib-tab index="0" heading="{{btnSearchLabel.achievements}}"><div class="inner"><input type="search" ng-model="nameAchievements" placeholder="{{btnSearchLabel.achievementSearch}}" class="form-control input-search"><table class="table table-striped"><thead><tr><th>{{btnSearchLabel.achievement}}</th><th>{{btnSearchLabel.value}}</th></tr></thead><tbody><tr ng-repeat="(key, achievement) in modalDialogCtrl.dialogModel.contact.Achievements__r.records | filter:nameAchievements as results"><td>{{ achievement.Achievement__r.Name }}</td><td><span ng-if="achievement.Level__c">{{achievement.Level__c}}</span> <span ng-if="achievement.Amount__c && achievement.Type__c == \'Badge\'">{{achievement.Amount__c}}</span> <span ng-if="achievement.LevelValue__c && achievement.Type__c == \'Attribute\'">{{achievement.LevelValue__c}}</span> <span ng-if="achievement.NumberOfMonths__c">{{achievement.NumberOfMonths__c}} ({{btnSearchLabel.numberOfMonths}})</span> <span ng-if="achievement.Type__c == \'Certificate\'" class="glyphicon glyphicon-ok"></span> <span ng-if="achievement.Type__c == \'Specialization\'">{{achievement.Min_Speciality_Match__c|number:0}}%</span></td></tr></tbody></table></div></uib-tab><uib-tab index="1" heading="{{btnSearchLabel.positions}}"><div class="inner"><input type="search" ng-model="nameAchievementSets" placeholder="{{btnSearchLabel.achievementSearch}}" class="form-control input-search"><table class="table table-striped"><thead><tr><th>{{btnSearchLabel.position}}</th><th>{{btnSearchLabel.matchLevel}}</th></tr></thead><tbody><tr ng-repeat="item in modalDialogCtrl.dialogModel.contact.Contact_Profile_Scores__r.records | filter:nameAchievementSets as results"><td>{{item.Achievement_Profile__r.Name}}</td><td><div class="match text-center" style="width:{{item.Match__c | number:0}}%;">{{item.Match__c | number:0}}%</div></td></tr></tbody></table></div></uib-tab></uib-tabset></div><div class="modal-footer"><div ng-repeat="button in modalDialogCtrl.dialogModel.buttons"><button type="button" ng-click="button.action(modalDialogCtrl.modalInstance, modalDialogCtrl.value)" class="btn btn-default" data-dismiss="modal" ng-bind-html="button.label"></button></div></div></div>'),e.put("app/views/mainmenu/mainmenu.view.html","<span>{{mmc.message}}</span>")}]);